@model BookCollection.Models.BookAndBookList

<h1>Wyszukiwanie książek</h1>

<hr />


<style type="text/css">

    .btn:enabled {
        background-color: #0096FF;
        color: #FFFFFF;
        padding: 10px 30px;
        font-size: 16px;
        margin-top: 30px;
    }

    .btn:disabled {
        background-color: #696969;
        color: #FFFFFF;
        padding: 10px 30px;
        font-size: 16px;
        margin-top: 30px;
    }

    .btn2 {
        border-radius: 3px;
        border: 1px solid #0096FF;
        background-color: #0096FF;
        color: #FFFFFF;
        padding: 10px 30px;
        font-size: 16px;
        margin-bottom: 30px;
    }

    .form-control {
        margin-bottom: 30px;
    }

</style>

<div class="row" id="proba">
    <div class="col-md-4">
        <form asp-action="SearchBook" method="POST">
        </form>
    </div>
</div>

<div class="row" id="row">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="@Model.OneBook.Title" class="control-label">Tytuł</label>
        <input asp-for="@Model.OneBook.Title" id="title" onchange="return contactFormEmpty()" class="form-control" />
    @*                 <span asp-validation-for="Title" class="text-danger"></span>
    *@            </div>
    <div class="form-group">
        <label asp-for="@Model.OneBook.NameAuthor" class="control-label">Imię autora</label>
        <input asp-for="@Model.OneBook.NameAuthor" id="name" onchange="return contactFormEmpty()" class="form-control" />
    @*                 <span asp-validation-for="NameAuthor" class="text-danger"></span>
    *@            </div>
    <div class="form-group">
        <label asp-for="@Model.OneBook.SurnameAuthor" class="control-label">Nazwisko autora</label>
        <input asp-for="@Model.OneBook.SurnameAuthor" id="surname" onchange="return contactFormEmpty()" class="form-control" />
    @*                 <span asp-validation-for="SurnameAuthor" class="text-danger"></span>
    *@            </div>
    <div class="form-group">
        <label asp-for="@Model.OneBook.Genre" class="control-label">Gatunek literacki</label>
        <input asp-for="@Model.OneBook.Genre" id="genre" onchange="return contactFormEmpty()" class="form-control" />
    @*                 <span asp-validation-for="Genre" class="text-danger"></span>
    *@            </div>
    <div class="form-group">
        <label asp-for="@Model.OneBook.YearOfPublication" class="control-label">Data wydania</label> @* tworzy labelkę *@
        <input asp-for="@Model.OneBook.YearOfPublication" id="year" onchange="return contactFormEmpty()" class="form-control" /> @* tworzy pole tekstowe typu liczbowego *@
    @*                 <span asp-validation-for="YearOfPublication" class="text-danger"></span>
    *@            </div>
    <div class="form-group">
        <button class="btn btn-default" id="btnSearch" name="btn" disabled="true" onclick="search()">Wyszukaj</button>
    </div>
</div>



<div class="row2" id="row2" hidden>
    <button class="btn2 btn-default" id="btnSearchAgain" name="btn2" onclick="searchAgain()">Wyszukaj ponownie</button>
    <link href="~/css/table.css" type="text/css" rel="stylesheet" />

    <table>
        <tr>
            <th>Tytuł</th>
            <th>Autor</th>
            <th>Gatunek</th>
            <th>Data wydania</th>
        </tr>

        @foreach (var book in Model.ListOfBooks)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.NameAuthor @book.SurnameAuthor </td>
                <td>@book.Genre</td>
                <td>@book.YearOfPublication</td>
            </tr>
        }
    </table>
</div>


<script>

    function contactFormEmpty() {
        var title = document.getElementById("title").value;
        title = title.trim();
        var name = document.getElementById("name").value;
        name.trim();
        var surname = document.getElementById("surname").value;
        surname.trim();
        var genre = document.getElementById("genre").value;
        genre.trim();
        var year = document.getElementById("year").value;
        year.trim();
        if ((title === "") && (name === "") && (surname === "") && (genre === "") && (year === "")) {
            btnSearch.setAttribute("disabled", true);
            console.log("aaa");
        }
        else {
            btnSearch.removeAttribute("disabled");
            console.log("abbbaa");
        }
    }

    var oldElement = document.getElementById('proba');

    function searchAgain() {
        var newElement = document.getElementById('row');
        row2.setAttribute("hidden", true);
        row.removeAttribute("hidden");
        oldElement.replaceWith(newElement);
    }

    function search() {
        var title = document.getElementById("title").value;
        title = title.trim();
        var name = document.getElementById("name").value;
        name.trim();
        var surname = document.getElementById("surname").value;
        surname.trim();
        var genre = document.getElementById("genre").value;
        genre.trim();
        var year = document.getElementById("year").value;
        year.trim();

        fetch(`/Book/SearchBook?` + new URLSearchParams({
            title: 'Pokuta'
        }))

        var newElement = document.getElementById('row2');
        row.setAttribute("hidden", true);
        row2.removeAttribute("hidden");
        var oldElement = document.getElementById('proba');
        oldElement.replaceWith(newElement);

            
    }

</script>

@* $.ajax({
            url: '@Url.Action("SearchBook", "Book")',
            type: 'GET',
            data: {
                Title: title,
                NameAuthor: name,
                SurnameAuthor: surname,
                Genre: genre,
                YearOfPublication: year
            },
            success: function (response) {
                console.log("Login successful!");
            },
            error: function (xhr, status, error) {
                console.log("Login failed");
            }
        }) *@

     @* $.ajax({
            type: "POST",
            url: "/Book/SearchBook",
            data: { Title: title, NameAuthor: name, SurnameAuthor: surname, Genre: genre, YearOfPublication: year }
        })
 *@